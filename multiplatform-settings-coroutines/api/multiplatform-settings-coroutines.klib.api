// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Alias: native => [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.russhwolf:multiplatform-settings-coroutines>
abstract interface com.russhwolf.settings.coroutines/FlowSettings : com.russhwolf.settings.coroutines/SuspendSettings { // com.russhwolf.settings.coroutines/FlowSettings|null[0]
    abstract fun getBooleanFlow(kotlin/String, kotlin/Boolean): kotlinx.coroutines.flow/Flow<kotlin/Boolean> // com.russhwolf.settings.coroutines/FlowSettings.getBooleanFlow|getBooleanFlow(kotlin.String;kotlin.Boolean){}[0]
    abstract fun getBooleanOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Boolean?> // com.russhwolf.settings.coroutines/FlowSettings.getBooleanOrNullFlow|getBooleanOrNullFlow(kotlin.String){}[0]
    abstract fun getDoubleFlow(kotlin/String, kotlin/Double): kotlinx.coroutines.flow/Flow<kotlin/Double> // com.russhwolf.settings.coroutines/FlowSettings.getDoubleFlow|getDoubleFlow(kotlin.String;kotlin.Double){}[0]
    abstract fun getDoubleOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Double?> // com.russhwolf.settings.coroutines/FlowSettings.getDoubleOrNullFlow|getDoubleOrNullFlow(kotlin.String){}[0]
    abstract fun getFloatFlow(kotlin/String, kotlin/Float): kotlinx.coroutines.flow/Flow<kotlin/Float> // com.russhwolf.settings.coroutines/FlowSettings.getFloatFlow|getFloatFlow(kotlin.String;kotlin.Float){}[0]
    abstract fun getFloatOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Float?> // com.russhwolf.settings.coroutines/FlowSettings.getFloatOrNullFlow|getFloatOrNullFlow(kotlin.String){}[0]
    abstract fun getIntFlow(kotlin/String, kotlin/Int): kotlinx.coroutines.flow/Flow<kotlin/Int> // com.russhwolf.settings.coroutines/FlowSettings.getIntFlow|getIntFlow(kotlin.String;kotlin.Int){}[0]
    abstract fun getIntOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Int?> // com.russhwolf.settings.coroutines/FlowSettings.getIntOrNullFlow|getIntOrNullFlow(kotlin.String){}[0]
    abstract fun getLongFlow(kotlin/String, kotlin/Long): kotlinx.coroutines.flow/Flow<kotlin/Long> // com.russhwolf.settings.coroutines/FlowSettings.getLongFlow|getLongFlow(kotlin.String;kotlin.Long){}[0]
    abstract fun getLongOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Long?> // com.russhwolf.settings.coroutines/FlowSettings.getLongOrNullFlow|getLongOrNullFlow(kotlin.String){}[0]
    abstract fun getStringFlow(kotlin/String, kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/String> // com.russhwolf.settings.coroutines/FlowSettings.getStringFlow|getStringFlow(kotlin.String;kotlin.String){}[0]
    abstract fun getStringOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/String?> // com.russhwolf.settings.coroutines/FlowSettings.getStringOrNullFlow|getStringOrNullFlow(kotlin.String){}[0]
    abstract suspend fun clear() // com.russhwolf.settings.coroutines/FlowSettings.clear|clear(){}[0]
    abstract suspend fun hasKey(kotlin/String): kotlin/Boolean // com.russhwolf.settings.coroutines/FlowSettings.hasKey|hasKey(kotlin.String){}[0]
    abstract suspend fun keys(): kotlin.collections/Set<kotlin/String> // com.russhwolf.settings.coroutines/FlowSettings.keys|keys(){}[0]
    abstract suspend fun putBoolean(kotlin/String, kotlin/Boolean) // com.russhwolf.settings.coroutines/FlowSettings.putBoolean|putBoolean(kotlin.String;kotlin.Boolean){}[0]
    abstract suspend fun putDouble(kotlin/String, kotlin/Double) // com.russhwolf.settings.coroutines/FlowSettings.putDouble|putDouble(kotlin.String;kotlin.Double){}[0]
    abstract suspend fun putFloat(kotlin/String, kotlin/Float) // com.russhwolf.settings.coroutines/FlowSettings.putFloat|putFloat(kotlin.String;kotlin.Float){}[0]
    abstract suspend fun putInt(kotlin/String, kotlin/Int) // com.russhwolf.settings.coroutines/FlowSettings.putInt|putInt(kotlin.String;kotlin.Int){}[0]
    abstract suspend fun putLong(kotlin/String, kotlin/Long) // com.russhwolf.settings.coroutines/FlowSettings.putLong|putLong(kotlin.String;kotlin.Long){}[0]
    abstract suspend fun putString(kotlin/String, kotlin/String) // com.russhwolf.settings.coroutines/FlowSettings.putString|putString(kotlin.String;kotlin.String){}[0]
    abstract suspend fun remove(kotlin/String) // com.russhwolf.settings.coroutines/FlowSettings.remove|remove(kotlin.String){}[0]
    abstract suspend fun size(): kotlin/Int // com.russhwolf.settings.coroutines/FlowSettings.size|size(){}[0]
    open suspend fun getBoolean(kotlin/String, kotlin/Boolean): kotlin/Boolean // com.russhwolf.settings.coroutines/FlowSettings.getBoolean|getBoolean(kotlin.String;kotlin.Boolean){}[0]
    open suspend fun getBooleanOrNull(kotlin/String): kotlin/Boolean? // com.russhwolf.settings.coroutines/FlowSettings.getBooleanOrNull|getBooleanOrNull(kotlin.String){}[0]
    open suspend fun getDouble(kotlin/String, kotlin/Double): kotlin/Double // com.russhwolf.settings.coroutines/FlowSettings.getDouble|getDouble(kotlin.String;kotlin.Double){}[0]
    open suspend fun getDoubleOrNull(kotlin/String): kotlin/Double? // com.russhwolf.settings.coroutines/FlowSettings.getDoubleOrNull|getDoubleOrNull(kotlin.String){}[0]
    open suspend fun getFloat(kotlin/String, kotlin/Float): kotlin/Float // com.russhwolf.settings.coroutines/FlowSettings.getFloat|getFloat(kotlin.String;kotlin.Float){}[0]
    open suspend fun getFloatOrNull(kotlin/String): kotlin/Float? // com.russhwolf.settings.coroutines/FlowSettings.getFloatOrNull|getFloatOrNull(kotlin.String){}[0]
    open suspend fun getInt(kotlin/String, kotlin/Int): kotlin/Int // com.russhwolf.settings.coroutines/FlowSettings.getInt|getInt(kotlin.String;kotlin.Int){}[0]
    open suspend fun getIntOrNull(kotlin/String): kotlin/Int? // com.russhwolf.settings.coroutines/FlowSettings.getIntOrNull|getIntOrNull(kotlin.String){}[0]
    open suspend fun getLong(kotlin/String, kotlin/Long): kotlin/Long // com.russhwolf.settings.coroutines/FlowSettings.getLong|getLong(kotlin.String;kotlin.Long){}[0]
    open suspend fun getLongOrNull(kotlin/String): kotlin/Long? // com.russhwolf.settings.coroutines/FlowSettings.getLongOrNull|getLongOrNull(kotlin.String){}[0]
    open suspend fun getString(kotlin/String, kotlin/String): kotlin/String // com.russhwolf.settings.coroutines/FlowSettings.getString|getString(kotlin.String;kotlin.String){}[0]
    open suspend fun getStringOrNull(kotlin/String): kotlin/String? // com.russhwolf.settings.coroutines/FlowSettings.getStringOrNull|getStringOrNull(kotlin.String){}[0]

    final object Companion // com.russhwolf.settings.coroutines/FlowSettings.Companion|null[0]
}

abstract interface com.russhwolf.settings.coroutines/SuspendSettings { // com.russhwolf.settings.coroutines/SuspendSettings|null[0]
    abstract suspend fun clear() // com.russhwolf.settings.coroutines/SuspendSettings.clear|clear(){}[0]
    abstract suspend fun getBoolean(kotlin/String, kotlin/Boolean): kotlin/Boolean // com.russhwolf.settings.coroutines/SuspendSettings.getBoolean|getBoolean(kotlin.String;kotlin.Boolean){}[0]
    abstract suspend fun getBooleanOrNull(kotlin/String): kotlin/Boolean? // com.russhwolf.settings.coroutines/SuspendSettings.getBooleanOrNull|getBooleanOrNull(kotlin.String){}[0]
    abstract suspend fun getDouble(kotlin/String, kotlin/Double): kotlin/Double // com.russhwolf.settings.coroutines/SuspendSettings.getDouble|getDouble(kotlin.String;kotlin.Double){}[0]
    abstract suspend fun getDoubleOrNull(kotlin/String): kotlin/Double? // com.russhwolf.settings.coroutines/SuspendSettings.getDoubleOrNull|getDoubleOrNull(kotlin.String){}[0]
    abstract suspend fun getFloat(kotlin/String, kotlin/Float): kotlin/Float // com.russhwolf.settings.coroutines/SuspendSettings.getFloat|getFloat(kotlin.String;kotlin.Float){}[0]
    abstract suspend fun getFloatOrNull(kotlin/String): kotlin/Float? // com.russhwolf.settings.coroutines/SuspendSettings.getFloatOrNull|getFloatOrNull(kotlin.String){}[0]
    abstract suspend fun getInt(kotlin/String, kotlin/Int): kotlin/Int // com.russhwolf.settings.coroutines/SuspendSettings.getInt|getInt(kotlin.String;kotlin.Int){}[0]
    abstract suspend fun getIntOrNull(kotlin/String): kotlin/Int? // com.russhwolf.settings.coroutines/SuspendSettings.getIntOrNull|getIntOrNull(kotlin.String){}[0]
    abstract suspend fun getLong(kotlin/String, kotlin/Long): kotlin/Long // com.russhwolf.settings.coroutines/SuspendSettings.getLong|getLong(kotlin.String;kotlin.Long){}[0]
    abstract suspend fun getLongOrNull(kotlin/String): kotlin/Long? // com.russhwolf.settings.coroutines/SuspendSettings.getLongOrNull|getLongOrNull(kotlin.String){}[0]
    abstract suspend fun getString(kotlin/String, kotlin/String): kotlin/String // com.russhwolf.settings.coroutines/SuspendSettings.getString|getString(kotlin.String;kotlin.String){}[0]
    abstract suspend fun getStringOrNull(kotlin/String): kotlin/String? // com.russhwolf.settings.coroutines/SuspendSettings.getStringOrNull|getStringOrNull(kotlin.String){}[0]
    abstract suspend fun hasKey(kotlin/String): kotlin/Boolean // com.russhwolf.settings.coroutines/SuspendSettings.hasKey|hasKey(kotlin.String){}[0]
    abstract suspend fun keys(): kotlin.collections/Set<kotlin/String> // com.russhwolf.settings.coroutines/SuspendSettings.keys|keys(){}[0]
    abstract suspend fun putBoolean(kotlin/String, kotlin/Boolean) // com.russhwolf.settings.coroutines/SuspendSettings.putBoolean|putBoolean(kotlin.String;kotlin.Boolean){}[0]
    abstract suspend fun putDouble(kotlin/String, kotlin/Double) // com.russhwolf.settings.coroutines/SuspendSettings.putDouble|putDouble(kotlin.String;kotlin.Double){}[0]
    abstract suspend fun putFloat(kotlin/String, kotlin/Float) // com.russhwolf.settings.coroutines/SuspendSettings.putFloat|putFloat(kotlin.String;kotlin.Float){}[0]
    abstract suspend fun putInt(kotlin/String, kotlin/Int) // com.russhwolf.settings.coroutines/SuspendSettings.putInt|putInt(kotlin.String;kotlin.Int){}[0]
    abstract suspend fun putLong(kotlin/String, kotlin/Long) // com.russhwolf.settings.coroutines/SuspendSettings.putLong|putLong(kotlin.String;kotlin.Long){}[0]
    abstract suspend fun putString(kotlin/String, kotlin/String) // com.russhwolf.settings.coroutines/SuspendSettings.putString|putString(kotlin.String;kotlin.String){}[0]
    abstract suspend fun remove(kotlin/String) // com.russhwolf.settings.coroutines/SuspendSettings.remove|remove(kotlin.String){}[0]
    abstract suspend fun size(): kotlin/Int // com.russhwolf.settings.coroutines/SuspendSettings.size|size(){}[0]

    final object Companion // com.russhwolf.settings.coroutines/SuspendSettings.Companion|null[0]
}

final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getBooleanFlow(kotlin/String, kotlin/Boolean): kotlinx.coroutines.flow/Flow<kotlin/Boolean> // com.russhwolf.settings.coroutines/getBooleanFlow|getBooleanFlow@com.russhwolf.settings.ObservableSettings(kotlin.String;kotlin.Boolean){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getBooleanOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Boolean?> // com.russhwolf.settings.coroutines/getBooleanOrNullFlow|getBooleanOrNullFlow@com.russhwolf.settings.ObservableSettings(kotlin.String){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getBooleanOrNullStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Boolean?> // com.russhwolf.settings.coroutines/getBooleanOrNullStateFlow|getBooleanOrNullStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getBooleanStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlin/Boolean, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Boolean> // com.russhwolf.settings.coroutines/getBooleanStateFlow|getBooleanStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlin.Boolean;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getDoubleFlow(kotlin/String, kotlin/Double): kotlinx.coroutines.flow/Flow<kotlin/Double> // com.russhwolf.settings.coroutines/getDoubleFlow|getDoubleFlow@com.russhwolf.settings.ObservableSettings(kotlin.String;kotlin.Double){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getDoubleOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Double?> // com.russhwolf.settings.coroutines/getDoubleOrNullFlow|getDoubleOrNullFlow@com.russhwolf.settings.ObservableSettings(kotlin.String){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getDoubleOrNullStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Double?> // com.russhwolf.settings.coroutines/getDoubleOrNullStateFlow|getDoubleOrNullStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getDoubleStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlin/Double, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Double> // com.russhwolf.settings.coroutines/getDoubleStateFlow|getDoubleStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlin.Double;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getFloatFlow(kotlin/String, kotlin/Float): kotlinx.coroutines.flow/Flow<kotlin/Float> // com.russhwolf.settings.coroutines/getFloatFlow|getFloatFlow@com.russhwolf.settings.ObservableSettings(kotlin.String;kotlin.Float){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getFloatOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Float?> // com.russhwolf.settings.coroutines/getFloatOrNullFlow|getFloatOrNullFlow@com.russhwolf.settings.ObservableSettings(kotlin.String){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getFloatOrNullStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Float?> // com.russhwolf.settings.coroutines/getFloatOrNullStateFlow|getFloatOrNullStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getFloatStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlin/Float, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Float> // com.russhwolf.settings.coroutines/getFloatStateFlow|getFloatStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlin.Float;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getIntFlow(kotlin/String, kotlin/Int): kotlinx.coroutines.flow/Flow<kotlin/Int> // com.russhwolf.settings.coroutines/getIntFlow|getIntFlow@com.russhwolf.settings.ObservableSettings(kotlin.String;kotlin.Int){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getIntOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Int?> // com.russhwolf.settings.coroutines/getIntOrNullFlow|getIntOrNullFlow@com.russhwolf.settings.ObservableSettings(kotlin.String){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getIntOrNullStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Int?> // com.russhwolf.settings.coroutines/getIntOrNullStateFlow|getIntOrNullStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getIntStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlin/Int, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Int> // com.russhwolf.settings.coroutines/getIntStateFlow|getIntStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlin.Int;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getLongFlow(kotlin/String, kotlin/Long): kotlinx.coroutines.flow/Flow<kotlin/Long> // com.russhwolf.settings.coroutines/getLongFlow|getLongFlow@com.russhwolf.settings.ObservableSettings(kotlin.String;kotlin.Long){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getLongOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/Long?> // com.russhwolf.settings.coroutines/getLongOrNullFlow|getLongOrNullFlow@com.russhwolf.settings.ObservableSettings(kotlin.String){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getLongOrNullStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Long?> // com.russhwolf.settings.coroutines/getLongOrNullStateFlow|getLongOrNullStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getLongStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlin/Long, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/Long> // com.russhwolf.settings.coroutines/getLongStateFlow|getLongStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlin.Long;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getStringFlow(kotlin/String, kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/String> // com.russhwolf.settings.coroutines/getStringFlow|getStringFlow@com.russhwolf.settings.ObservableSettings(kotlin.String;kotlin.String){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getStringOrNullFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotlin/String?> // com.russhwolf.settings.coroutines/getStringOrNullFlow|getStringOrNullFlow@com.russhwolf.settings.ObservableSettings(kotlin.String){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getStringOrNullStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/String?> // com.russhwolf.settings.coroutines/getStringOrNullStateFlow|getStringOrNullStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/getStringStateFlow(kotlinx.coroutines/CoroutineScope, kotlin/String, kotlin/String, kotlinx.coroutines.flow/SharingStarted = ...): kotlinx.coroutines.flow/StateFlow<kotlin/String> // com.russhwolf.settings.coroutines/getStringStateFlow|getStringStateFlow@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineScope;kotlin.String;kotlin.String;kotlinx.coroutines.flow.SharingStarted){}[0]
final fun (com.russhwolf.settings/ObservableSettings).com.russhwolf.settings.coroutines/toFlowSettings(kotlinx.coroutines/CoroutineDispatcher = ...): com.russhwolf.settings.coroutines/FlowSettings // com.russhwolf.settings.coroutines/toFlowSettings|toFlowSettings@com.russhwolf.settings.ObservableSettings(kotlinx.coroutines.CoroutineDispatcher){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings.coroutines/toSuspendSettings(kotlinx.coroutines/CoroutineDispatcher = ...): com.russhwolf.settings.coroutines/SuspendSettings // com.russhwolf.settings.coroutines/toSuspendSettings|toSuspendSettings@com.russhwolf.settings.Settings(kotlinx.coroutines.CoroutineDispatcher){}[0]

// Targets: [native]
final fun (com.russhwolf.settings.coroutines/FlowSettings).com.russhwolf.settings.coroutines/toBlockingObservableSettings(kotlinx.coroutines/CoroutineScope = ...): com.russhwolf.settings/ObservableSettings // com.russhwolf.settings.coroutines/toBlockingObservableSettings|toBlockingObservableSettings@com.russhwolf.settings.coroutines.FlowSettings(kotlinx.coroutines.CoroutineScope){}[0]

// Targets: [native]
final fun (com.russhwolf.settings.coroutines/SuspendSettings).com.russhwolf.settings.coroutines/toBlockingSettings(): com.russhwolf.settings/Settings // com.russhwolf.settings.coroutines/toBlockingSettings|toBlockingSettings@com.russhwolf.settings.coroutines.SuspendSettings(){}[0]
